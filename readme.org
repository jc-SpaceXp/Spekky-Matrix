** Spekky Matrix
A FreeRTOS based project were a spectrum analyser is displayed on a LED matrix board run from a STM32 device
*** Detailed Description
A MAX2719 based 8x8 led matrix displays the fast fourier transform (FFT) of
an incoming audio signal picked up by a microphone. The incoming audio
is a double buffered DMA signal. The led matrix is driven via the STM32's
SPI interface. All while internal hardware timers and FreeRTOS are
responsible for accurate timing e.g. refresh rate of led matrix and data
acquisition.
*** Tools
The following tools are needed to build this project
- make
- [[https://developer.arm.com/downloads/-/gnu-rm][arm-none-eabi-gcc]]
- [[https://gcc.gnu.org/][gcc]] (for unit tests)
- [[https://github.com/stlink-org/stlink][st-flash]] in order to interact with the STM32
*** Submodules
- [[https://www.freertos.org/][FreeRTOS]]
- [[https://www.arm.com/technologies/cmsis][CMSIS V6]]
- [[https://github.com/ARM-software/CMSIS-DSP][ARM CMSIS DSP]]
- [[https://github.com/STMicroelectronics/stm32g4xx-nucleo-bsp][STM32G4xx Nucleo BSP]]
- [[https://github.com/STMicroelectronics/stm32g4xx_hal_driver][STM32G4 HAL]]
- [[https://github.com/STMicroelectronics/cmsis_device_g4][CMSIS G4]] CMSIS device library
- [[https://github.com/silentbicycle/greatest][Greatest]] C test framework
- [[https://github.com/meekrosoft/fff][fff]] C test doubles
- [[https://github.com/lucasssvaz/SigPlotI2S][SigPlotI2S]] Plot I2S PulseView/Sigrok output data

CMSIS will also produce linker warnings due to newlib e.g. "_write is not
implemented and will always fail". There is quite a bit of a size overhead
when pulling in all the CMSIS modules. An average project would be
around ~100Mb. This increases with FreeRTOS too.
